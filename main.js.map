{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  auth0_domain: \"dev-2nbjdzvu.us.auth0.com\",\n  auth0_client_id: \"79qkAdchT3jEEXtwnw1Ot5D0zD3TYYV6\",\n  auth0_audience: \"https://dev.hamidbehnam.com/nodejs/8324/\",\n  auth0_redirect_uri: \"https://dev.hamidbehnam.com/angular/7884\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport {AuthService} from '@auth0/auth0-angular';\nimport jwt_decode from \"jwt-decode\";\nimport {RedirectLoginOptions} from '@auth0/auth0-spa-js';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hamidev-angular-src';\n  accessToken: string;\n  accessTokenDecoded: any;\n  redirectLoginOptions: RedirectLoginOptions;\n\n  constructor(public authService: AuthService) {\n    this.authService.user$.subscribe(user => {\n      console.log(user);\n    });\n\n    console.log(window.location.origin + window.location.pathname);\n\n    this.redirectLoginOptions = {\n      redirect_uri: window.location.origin + window.location.pathname,\n      appState: {\n        theName: \"Hamid\",\n        theCode: 234\n      }\n    };\n  }\n\n  async getAccessToken() {\n    this.authService.getAccessTokenSilently({\n      ignoreCache: true\n    }).subscribe(token => {\n      this.accessToken = token;\n      this.accessTokenDecoded = jwt_decode(this.accessToken);\n    });\n  }\n}\n","<h2>Auth0 - Angular Sample App</h2>\n\n<button (click)=\"authService.loginWithRedirect()\">Login</button>\n\n<button (click)=\"authService.logout()\">Logout</button>\n\n<button (click)=\"getAccessToken()\">Get Access Token</button>\n\n<ul *ngIf=\"authService.user$ | async as user\">\n  <li>{{ user.name }}</li>\n  <li>{{ user.email }}</li>\n</ul>\n\n<div>{{accessToken}}</div>\n<div>{{accessTokenDecoded | json}}</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {AuthModule} from \"@auth0/auth0-angular\";\nimport {environment} from \"../environments/environment\";\n\n// const urlSearchParams = new URLSearchParams(window.location.search);\n// let appName = urlSearchParams.get('appName');\n//\n// if (!appName) {\n//   urlSearchParams.set('appName', 'hamidev-nodejs-8324-src');\n//   const newRelativePathQuery = window.location.pathname + '?' + urlSearchParams.toString();\n//   history.pushState(null, '', newRelativePathQuery);\n// }\n//\n// appName = urlSearchParams.get('appName');\n//\n// console.log('the appName is: ', appName);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AuthModule.forRoot({\n      domain: environment.auth0_domain,\n      clientId: environment.auth0_client_id,\n      audience: environment.auth0_audience,\n      redirectUri: environment.auth0_redirect_uri\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}